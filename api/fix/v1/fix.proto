syntax = "proto3";

package api.fix.v1;

option go_package = "github.com/kolobublik/limit-order-book/api/fix/v1;v1";

// OrderType represents the type of order
enum OrderType {
  ORDER_TYPE_UNSPECIFIED = 0;
  ORDER_TYPE_MARKET = 1;
  ORDER_TYPE_LIMIT = 2;
  ORDER_TYPE_VWAP = 3;
}

// Side represents the side of the order (buy/sell)
enum Side {
  SIDE_UNSPECIFIED = 0;
  SIDE_BUY = 1;
  SIDE_SELL = 2;
}

// QuantityType represents how the quantity is specified (base/quote)
enum QuantityType {
  QUANTITY_TYPE_UNSPECIFIED = 0;
  QUANTITY_TYPE_BASE = 1;
  QUANTITY_TYPE_QUOTE = 2;
}

// Order represents a new order request
message Order {
  string symbol = 1;
  OrderType order_type = 2;
  Side side = 3;
  QuantityType quantity_type = 4;
  string quantity = 5;
  string price = 6;
  // Optional fields for VWAP orders
  string start_time = 7;
  string participation_rate = 8;
  string expire_time = 9;
}

// OrderInfo represents order information for status and cancellation
message OrderInfo {
  string cl_ord_id = 1;
  string order_id = 2;
  string symbol = 3;
  string side = 4;
  string status = 5;
  string type = 6;
  string price = 7;
  string quantity = 8;
}

// PlaceOrderRequest represents a request to place a new order
message PlaceOrderRequest {
  Order order = 1;
}

// PlaceOrderResponse represents the response from placing an order
message PlaceOrderResponse {
  string cl_ord_id = 1;
  string status = 2;
}

// GetOrderStatusRequest represents a request to get order status
message GetOrderStatusRequest {
  OrderInfo order_info = 1;
}

// GetOrderStatusResponse represents the response with order status
message GetOrderStatusResponse {
  OrderInfo order_info = 1;
}

// CancelOrderRequest represents a request to cancel an order
message CancelOrderRequest {
  OrderInfo order_info = 1;
}

// CancelOrderResponse represents the response from cancelling an order
message CancelOrderResponse {
  string status = 1;
}

// FIXService represents the FIX trading service
service FIXService {
  // PlaceOrder places a new order
  rpc PlaceOrder(PlaceOrderRequest) returns (PlaceOrderResponse) {}
  // GetOrderStatus gets the status of an order
  rpc GetOrderStatus(GetOrderStatusRequest) returns (GetOrderStatusResponse) {}
  // CancelOrder cancels an existing order
  rpc CancelOrder(CancelOrderRequest) returns (CancelOrderResponse) {}
}
